# Environment Variables Template
# Copy this file to .env and fill in your actual values
# NEVER commit .env to git!

# === ACTIVE AI PROVIDERS ===

# Anthropic (Claude - Primary model)
ANTHROPIC_API_KEY=your_anthropic_key_here

# DeepSeek API (for cost-effective research via OpenRouter)
DEEPSEEK_API_KEY=your_deepseek_or_openrouter_key_here
OPENROUTER_API_KEY=your_openrouter_key_here

# Ollama (local models - no API key needed)
OLLAMA_API_KEY=ollama

# === PROJECT API KEYS ===

# Cerebras Cloud API (ultra-fast inference)
CEREBRAS_API_KEY=your_cerebras_key_here
CEREBRAS_API_BASE=https://api.cerebras.ai/v1

# RunPod vLLM (cost-optimized inference - 5x cheaper than Cerebras)
RUNPOD_API_KEY=your_runpod_api_key_here
RUNPOD_VLLM_ENDPOINT_ID=your_vllm_endpoint_id_here
RUNPOD_DEFAULT_MODEL=meta-llama/Llama-3.1-8B

# === OPTIONAL PROVIDERS ===

# OpenAI (GPT models)
# OPENAI_API_KEY=your_openai_key_here

# Other providers
# GOOGLE_API_KEY=your_google_key_here
# PERPLEXITY_API_KEY=your_perplexity_key_here
# XAI_API_KEY=your_xai_key_here
# MISTRAL_API_KEY=your_mistral_key_here

# === CRM INTEGRATIONS ===

# HubSpot CRM OAuth 2.0 Configuration
HUBSPOT_CLIENT_ID=your_hubspot_client_id_here
HUBSPOT_CLIENT_SECRET=your_hubspot_client_secret_here
HUBSPOT_REDIRECT_URI=http://localhost:8001/api/crm/hubspot/callback

# CRM Encryption Key (generate with: python -c 'from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())')
CRM_ENCRYPTION_KEY=your_fernet_encryption_key_here

# Apollo.io API (contact enrichment)
# APOLLO_API_KEY=your_apollo_api_key_here

# LinkedIn OAuth 2.0 Configuration
LINKEDIN_CLIENT_ID=your_linkedin_client_id_here
LINKEDIN_CLIENT_SECRET=your_linkedin_client_secret_here
LINKEDIN_REDIRECT_URI=http://localhost:8001/api/linkedin/callback

# === DATABASE CONFIGURATION ===

POSTGRES_USER=sales_agent
POSTGRES_PASSWORD=CHANGE_ME_TO_SECURE_PASSWORD
POSTGRES_DB=sales_agent_db
DATABASE_URL=postgresql+psycopg://sales_agent:CHANGE_ME_TO_SECURE_PASSWORD@localhost:5433/sales_agent_db

# === REDIS CONFIGURATION ===

REDIS_URL=redis://localhost:6379/0

# === APPLICATION SETTINGS ===

# Environment (development, staging, production)
ENVIRONMENT=development

# Database debug logging (true/false - only enable in development)
DATABASE_ECHO=false

# Database connection pool settings
# Pool size: Number of connections to maintain in the pool (default: 5)
DB_POOL_SIZE=5

# Max overflow: Additional connections beyond pool_size when pool is exhausted (default: 10)
# Total capacity = DB_POOL_SIZE + DB_MAX_OVERFLOW (e.g., 5 + 10 = 15 max connections)
DB_MAX_OVERFLOW=10

# Pool timeout: Seconds to wait for an available connection before raising TimeoutError (default: 30)
# Should be less than your API request timeout
DB_POOL_TIMEOUT=30

# Pool recycle: Seconds before recycling a connection to prevent stale connections (default: 3600 = 1 hour)
# Helps prevent "MySQL server has gone away" and similar database timeout issues
# Should be less than your database server's connection timeout (MySQL default: 28800s / 8 hours)
DB_POOL_RECYCLE=3600

# Connection timeout: Seconds to wait when establishing initial connection (default: 10)
DB_CONNECT_TIMEOUT=10

# === MONITORING & OBSERVABILITY ===

# Sentry Error Tracking (optional - leave empty to disable)
SENTRY_DSN=
SENTRY_TRACES_SAMPLE_RATE=0.1  # 10% of transactions sent for performance monitoring
SENTRY_PROFILES_SAMPLE_RATE=0.1  # 10% of transactions profiled

# Datadog APM & Monitoring (optional - set to 'true' to enable)
DATADOG_ENABLED=false
DATADOG_API_KEY=your_datadog_api_key_here
DATADOG_APP_KEY=your_datadog_app_key_here
DATADOG_SERVICE_NAME=sales-agent-api
DATADOG_SITE=datadoghq.com  # Use datadoghq.eu for EU region

# Testing flag (prevents monitoring data during tests)
TESTING=false

# === PGADMIN CONFIGURATION ===

# PgAdmin Web Interface
PGADMIN_DEFAULT_EMAIL=admin@salesagent.local
PGADMIN_DEFAULT_PASSWORD=CHANGE_ME_TO_SECURE_PASSWORD
