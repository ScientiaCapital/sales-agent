"""Add LangGraph models for agent tracking and state persistence

Revision ID: b5d67d087927
Revises: 0293cbeb9305
Create Date: 2025-10-28 19:03:45.543672

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy

# revision identifiers, used by Alembic.
revision: str = 'b5d67d087927'
down_revision: Union[str, None] = '0293cbeb9305'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('battle_card_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('card_type', sa.Enum('PRICING', 'COMPETITOR', 'FEATURE', 'OBJECTION', 'CASE_STUDY', 'TECHNICAL', 'GENERAL', name='battlecardtype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('talking_points', sa.JSON(), nullable=True),
    sa.Column('response_template', sa.Text(), nullable=True),
    sa.Column('trigger_keywords', sa.JSON(), nullable=False),
    sa.Column('trigger_phrases', sa.JSON(), nullable=True),
    sa.Column('trigger_topics', sa.JSON(), nullable=True),
    sa.Column('times_triggered', sa.Integer(), nullable=True),
    sa.Column('times_used', sa.Integer(), nullable=True),
    sa.Column('average_helpfulness_score', sa.Float(), nullable=True),
    sa.Column('usage_rate', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('ix_battle_card_templates_card_type', 'battle_card_templates', ['card_type'], unique=False)
    op.create_index('ix_battle_card_templates_is_active', 'battle_card_templates', ['is_active'], unique=False)
    op.create_index('ix_battle_card_templates_priority', 'battle_card_templates', ['priority'], unique=False)
    op.create_table('langgraph_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('execution_id', sa.String(length=36), nullable=True),
    sa.Column('agent_type', sa.String(length=50), nullable=False),
    sa.Column('thread_id', sa.String(length=36), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('cost_usd', sa.Float(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('graph_type', sa.String(length=20), nullable=False),
    sa.Column('nodes_executed', sa.JSON(), nullable=True),
    sa.Column('checkpoint_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_langgraph_execution_agent_status', 'langgraph_executions', ['agent_type', 'status'], unique=False)
    op.create_index('idx_langgraph_execution_thread', 'langgraph_executions', ['thread_id'], unique=False)
    op.create_index(op.f('ix_langgraph_executions_agent_type'), 'langgraph_executions', ['agent_type'], unique=False)
    op.create_index(op.f('ix_langgraph_executions_execution_id'), 'langgraph_executions', ['execution_id'], unique=True)
    op.create_index(op.f('ix_langgraph_executions_id'), 'langgraph_executions', ['id'], unique=False)
    op.create_index(op.f('ix_langgraph_executions_status'), 'langgraph_executions', ['status'], unique=False)
    op.create_index(op.f('ix_langgraph_executions_thread_id'), 'langgraph_executions', ['thread_id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('lead_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'PAUSED', 'ERROR', 'ABANDONED', name='conversationstatus'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('total_audio_seconds', sa.Float(), nullable=True),
    sa.Column('audio_quality_score', sa.Float(), nullable=True),
    sa.Column('total_turns', sa.Integer(), nullable=True),
    sa.Column('agent_turns', sa.Integer(), nullable=True),
    sa.Column('prospect_turns', sa.Integer(), nullable=True),
    sa.Column('overall_sentiment', sa.Enum('POSITIVE', 'NEUTRAL', 'NEGATIVE', 'MIXED', name='sentimenttype'), nullable=True),
    sa.Column('average_sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_trend', sa.String(), nullable=True),
    sa.Column('detected_topics', sa.JSON(), nullable=True),
    sa.Column('key_objections', sa.JSON(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('total_suggestions_shown', sa.Integer(), nullable=True),
    sa.Column('total_suggestions_used', sa.Integer(), nullable=True),
    sa.Column('suggestion_usage_rate', sa.Float(), nullable=True),
    sa.Column('total_battle_cards_shown', sa.Integer(), nullable=True),
    sa.Column('total_battle_cards_used', sa.Integer(), nullable=True),
    sa.Column('battle_card_usage_rate', sa.Float(), nullable=True),
    sa.Column('average_transcription_latency_ms', sa.Integer(), nullable=True),
    sa.Column('average_analysis_latency_ms', sa.Integer(), nullable=True),
    sa.Column('average_total_latency_ms', sa.Integer(), nullable=True),
    sa.Column('final_outcome', sa.String(), nullable=True),
    sa.Column('next_action', sa.Text(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('agent_notes', sa.Text(), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_conversations_lead_id', 'conversations', ['lead_id'], unique=False)
    op.create_index('ix_conversations_overall_sentiment', 'conversations', ['overall_sentiment'], unique=False)
    op.create_index('ix_conversations_started_at', 'conversations', ['started_at'], unique=False)
    op.create_index('ix_conversations_status', 'conversations', ['status'], unique=False)
    op.create_table('langgraph_checkpoints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('checkpoint_id', sa.String(length=36), nullable=True),
    sa.Column('execution_id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.String(length=36), nullable=False),
    sa.Column('checkpoint_data', sa.JSON(), nullable=False),
    sa.Column('node_name', sa.String(length=100), nullable=True),
    sa.Column('step_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['execution_id'], ['langgraph_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_langgraph_checkpoint_thread', 'langgraph_checkpoints', ['thread_id'], unique=False)
    op.create_index(op.f('ix_langgraph_checkpoints_checkpoint_id'), 'langgraph_checkpoints', ['checkpoint_id'], unique=True)
    op.create_index(op.f('ix_langgraph_checkpoints_id'), 'langgraph_checkpoints', ['id'], unique=False)
    op.create_index(op.f('ix_langgraph_checkpoints_thread_id'), 'langgraph_checkpoints', ['thread_id'], unique=False)
    op.create_table('langgraph_tool_calls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tool_call_id', sa.String(length=36), nullable=True),
    sa.Column('execution_id', sa.Integer(), nullable=False),
    sa.Column('tool_name', sa.String(length=100), nullable=False),
    sa.Column('tool_type', sa.String(length=50), nullable=False),
    sa.Column('tool_input', sa.JSON(), nullable=True),
    sa.Column('tool_output', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('cost_usd', sa.Float(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['execution_id'], ['langgraph_executions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_langgraph_tool_execution', 'langgraph_tool_calls', ['execution_id'], unique=False)
    op.create_index('idx_langgraph_tool_name_type', 'langgraph_tool_calls', ['tool_name', 'tool_type'], unique=False)
    op.create_index(op.f('ix_langgraph_tool_calls_id'), 'langgraph_tool_calls', ['id'], unique=False)
    op.create_index(op.f('ix_langgraph_tool_calls_tool_call_id'), 'langgraph_tool_calls', ['tool_call_id'], unique=True)
    op.create_index(op.f('ix_langgraph_tool_calls_tool_name'), 'langgraph_tool_calls', ['tool_name'], unique=False)
    op.create_table('conversation_battle_cards',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=True),
    sa.Column('card_type', sa.Enum('PRICING', 'COMPETITOR', 'FEATURE', 'OBJECTION', 'CASE_STUDY', 'TECHNICAL', 'GENERAL', name='battlecardtype'), nullable=False),
    sa.Column('trigger_keyword', sa.String(), nullable=True),
    sa.Column('trigger_turn_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('talking_points', sa.JSON(), nullable=True),
    sa.Column('response_template', sa.Text(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('suggested_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('viewed_at', sa.DateTime(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('was_helpful', sa.Boolean(), nullable=True),
    sa.Column('time_to_view_seconds', sa.Integer(), nullable=True),
    sa.Column('time_to_use_seconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_conversation_battle_cards_card_type', 'conversation_battle_cards', ['card_type'], unique=False)
    op.create_index('ix_conversation_battle_cards_conversation_id', 'conversation_battle_cards', ['conversation_id'], unique=False)
    op.create_index('ix_conversation_battle_cards_suggested_at', 'conversation_battle_cards', ['suggested_at'], unique=False)
    op.create_table('conversation_turns',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('conversation_id', sa.String(), nullable=True),
    sa.Column('turn_number', sa.Integer(), nullable=True),
    sa.Column('speaker', sa.Enum('AGENT', 'PROSPECT', 'SYSTEM', name='speakerrole'), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('transcription_confidence', sa.Float(), nullable=True),
    sa.Column('audio_duration_ms', sa.Integer(), nullable=True),
    sa.Column('audio_url', sa.String(), nullable=True),
    sa.Column('sentiment', sa.Enum('POSITIVE', 'NEUTRAL', 'NEGATIVE', 'MIXED', name='sentimenttype'), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_confidence', sa.Float(), nullable=True),
    sa.Column('detected_emotions', sa.JSON(), nullable=True),
    sa.Column('detected_topics', sa.JSON(), nullable=True),
    sa.Column('detected_keywords', sa.JSON(), nullable=True),
    sa.Column('is_objection', sa.Boolean(), nullable=True),
    sa.Column('is_question', sa.Boolean(), nullable=True),
    sa.Column('is_commitment', sa.Boolean(), nullable=True),
    sa.Column('suggestions', sa.JSON(), nullable=True),
    sa.Column('suggestion_shown', sa.Boolean(), nullable=True),
    sa.Column('suggestion_used', sa.Boolean(), nullable=True),
    sa.Column('suggestion_used_index', sa.Integer(), nullable=True),
    sa.Column('transcription_latency_ms', sa.Integer(), nullable=True),
    sa.Column('sentiment_analysis_latency_ms', sa.Integer(), nullable=True),
    sa.Column('suggestion_generation_latency_ms', sa.Integer(), nullable=True),
    sa.Column('total_latency_ms', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_conversation_turns_conversation_id', 'conversation_turns', ['conversation_id'], unique=False)
    op.create_index('ix_conversation_turns_sentiment', 'conversation_turns', ['sentiment'], unique=False)
    op.create_index('ix_conversation_turns_speaker', 'conversation_turns', ['speaker'], unique=False)
    op.create_index('ix_conversation_turns_started_at', 'conversation_turns', ['started_at'], unique=False)
    op.drop_index('ix_agent_executions_completed_at', table_name='agent_executions')
    op.drop_index('ix_agent_executions_lead_status', table_name='agent_executions')
    op.drop_index('ix_agent_executions_started_at', table_name='agent_executions')
    op.drop_index('ix_agent_executions_status_created', table_name='agent_executions')
    op.add_column('campaign_messages', sa.Column('personalization_data', sa.JSON(), nullable=True))
    op.add_column('campaign_messages', sa.Column('delivered_at', sa.DateTime(), nullable=True))
    op.alter_column('campaign_messages', 'lead_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('campaign_messages', 'selected_variant',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('campaign_messages', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('idx_campaign_messages_campaign_id', table_name='campaign_messages')
    op.drop_index('idx_campaign_messages_lead_id', table_name='campaign_messages')
    op.drop_index('idx_campaign_messages_status', table_name='campaign_messages')
    op.create_index('idx_campaign_message_status', 'campaign_messages', ['campaign_id', 'status'], unique=False)
    op.create_index('idx_message_lead', 'campaign_messages', ['lead_id', 'status'], unique=False)
    op.create_index(op.f('ix_campaign_messages_campaign_id'), 'campaign_messages', ['campaign_id'], unique=False)
    op.create_index(op.f('ix_campaign_messages_id'), 'campaign_messages', ['id'], unique=False)
    op.create_index(op.f('ix_campaign_messages_lead_id'), 'campaign_messages', ['lead_id'], unique=False)
    op.create_index(op.f('ix_campaign_messages_status'), 'campaign_messages', ['status'], unique=False)
    op.create_foreign_key(None, 'campaign_messages', 'leads', ['lead_id'], ['id'], ondelete='SET NULL')
    op.add_column('campaigns', sa.Column('total_sent', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('total_delivered', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('total_opened', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('total_clicked', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('total_replied', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('activated_at', sa.DateTime(), nullable=True))
    op.alter_column('campaigns', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('idx_campaigns_channel', table_name='campaigns')
    op.drop_index('idx_campaigns_created_at', table_name='campaigns')
    op.drop_index('idx_campaigns_status', table_name='campaigns')
    op.create_index('idx_campaign_status_channel', 'campaigns', ['status', 'channel'], unique=False)
    op.create_index(op.f('ix_campaigns_id'), 'campaigns', ['id'], unique=False)
    op.create_index(op.f('ix_campaigns_status'), 'campaigns', ['status'], unique=False)
    op.drop_column('campaigns', 'messages_replied')
    op.drop_column('campaigns', 'started_at')
    op.drop_column('campaigns', 'messages_opened')
    op.drop_column('campaigns', 'messages_clicked')
    op.drop_column('campaigns', 'messages_sent')
    op.drop_index('ix_contact_profiles_company_score', table_name='contact_social_profiles')
    op.drop_index('ix_contact_social_profiles_contact_priority', table_name='contact_social_profiles')
    op.drop_index('ix_contact_social_profiles_decision_maker_score', table_name='contact_social_profiles')
    op.drop_index('ix_contact_social_profiles_lead_id', table_name='contact_social_profiles')
    op.drop_index('ix_customers_firebase_uid', table_name='customers')
    op.drop_column('customers', 'firebase_uid')
    op.add_column('knowledge_documents', sa.Column('runpod_storage_path', sa.String(length=1000), nullable=True))
    op.add_column('knowledge_documents', sa.Column('runpod_url', sa.String(length=2000), nullable=True))
    op.add_column('knowledge_documents', sa.Column('text_content', sa.Text(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('summary', sa.Text(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('key_items', sa.JSON(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('page_gists', sa.JSON(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('page_metadata', sa.JSON(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('analysis_status', sa.String(length=50), nullable=True))
    op.add_column('knowledge_documents', sa.Column('analysis_error', sa.Text(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('analyzed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('knowledge_documents', sa.Column('page_count', sa.Integer(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('compression_ratio', sa.Float(), nullable=True))
    op.add_column('knowledge_documents', sa.Column('processing_time_ms', sa.Integer(), nullable=True))
    # Skip vector column change - pgvector extension not installed
    # op.alter_column('knowledge_documents', 'embedding',
    #            existing_type=sa.TEXT(),
    #            type_=pgvector.sqlalchemy.vector.VECTOR(dim=384),
    #            existing_nullable=True)
    op.drop_column('knowledge_documents', 'firebase_storage_path')
    op.drop_column('knowledge_documents', 'extracted_text')
    op.drop_column('knowledge_documents', 'firebase_url')
    op.drop_index('ix_leads_qualified_at', table_name='leads')
    op.drop_index('ix_leads_score_created', table_name='leads', postgresql_where='(qualification_score IS NOT NULL)')
    op.drop_index('ix_leads_updated_at', table_name='leads')
    op.alter_column('message_variant_analytics', 'subject',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)
    op.alter_column('message_variant_analytics', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('idx_variant_analytics_message_id', table_name='message_variant_analytics')
    op.drop_index('idx_variant_analytics_tone', table_name='message_variant_analytics')
    op.create_index('idx_variant_analytics', 'message_variant_analytics', ['message_id', 'variant_number'], unique=False)
    op.create_index(op.f('ix_message_variant_analytics_id'), 'message_variant_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_message_variant_analytics_message_id'), 'message_variant_analytics', ['message_id'], unique=False)
    op.drop_index('ix_organization_charts_lead_id', table_name='organization_charts')
    op.drop_index('ix_social_media_activity_lead_id', table_name='social_media_activity')
    op.drop_index('ix_social_media_activity_platform_posted', table_name='social_media_activity')
    op.drop_index('ix_social_media_activity_posted_at', table_name='social_media_activity')
    op.drop_index('ix_social_media_activity_scraped_at', table_name='social_media_activity')
    op.drop_index('ix_social_media_activity_sentiment', table_name='social_media_activity')
    op.drop_index('ix_voice_session_logs_completed_at', table_name='voice_session_logs')
    op.drop_index('ix_voice_sessions_status_created', table_name='voice_session_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_voice_sessions_status_created', 'voice_session_logs', ['status', sa.text('created_at DESC')], unique=False)
    op.create_index('ix_voice_session_logs_completed_at', 'voice_session_logs', [sa.text('completed_at DESC')], unique=False)
    op.create_index('ix_social_media_activity_sentiment', 'social_media_activity', ['sentiment'], unique=False)
    op.create_index('ix_social_media_activity_scraped_at', 'social_media_activity', [sa.text('scraped_at DESC')], unique=False)
    op.create_index('ix_social_media_activity_posted_at', 'social_media_activity', [sa.text('posted_at DESC')], unique=False)
    op.create_index('ix_social_media_activity_platform_posted', 'social_media_activity', ['platform', sa.text('posted_at DESC')], unique=False)
    op.create_index('ix_social_media_activity_lead_id', 'social_media_activity', ['lead_id'], unique=False)
    op.create_index('ix_organization_charts_lead_id', 'organization_charts', ['lead_id'], unique=False)
    op.drop_index(op.f('ix_message_variant_analytics_message_id'), table_name='message_variant_analytics')
    op.drop_index(op.f('ix_message_variant_analytics_id'), table_name='message_variant_analytics')
    op.drop_index('idx_variant_analytics', table_name='message_variant_analytics')
    op.create_index('idx_variant_analytics_tone', 'message_variant_analytics', ['tone'], unique=False)
    op.create_index('idx_variant_analytics_message_id', 'message_variant_analytics', ['message_id'], unique=False)
    op.alter_column('message_variant_analytics', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('message_variant_analytics', 'subject',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.create_index('ix_leads_updated_at', 'leads', [sa.text('updated_at DESC')], unique=False)
    op.create_index('ix_leads_score_created', 'leads', [sa.text('qualification_score DESC'), sa.text('created_at DESC')], unique=False, postgresql_where='(qualification_score IS NOT NULL)')
    op.create_index('ix_leads_qualified_at', 'leads', [sa.text('qualified_at DESC')], unique=False)
    op.add_column('knowledge_documents', sa.Column('firebase_url', sa.VARCHAR(length=2000), autoincrement=False, nullable=True))
    op.add_column('knowledge_documents', sa.Column('extracted_text', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('knowledge_documents', sa.Column('firebase_storage_path', sa.VARCHAR(length=1000), autoincrement=False, nullable=True))
    op.alter_column('knowledge_documents', 'embedding',
               existing_type=pgvector.sqlalchemy.vector.VECTOR(dim=384),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('knowledge_documents', 'processing_time_ms')
    op.drop_column('knowledge_documents', 'compression_ratio')
    op.drop_column('knowledge_documents', 'page_count')
    op.drop_column('knowledge_documents', 'analyzed_at')
    op.drop_column('knowledge_documents', 'analysis_error')
    op.drop_column('knowledge_documents', 'analysis_status')
    op.drop_column('knowledge_documents', 'page_metadata')
    op.drop_column('knowledge_documents', 'page_gists')
    op.drop_column('knowledge_documents', 'key_items')
    op.drop_column('knowledge_documents', 'summary')
    op.drop_column('knowledge_documents', 'text_content')
    op.drop_column('knowledge_documents', 'runpod_url')
    op.drop_column('knowledge_documents', 'runpod_storage_path')
    op.add_column('customers', sa.Column('firebase_uid', sa.VARCHAR(length=128), autoincrement=False, nullable=False))
    op.create_index('ix_customers_firebase_uid', 'customers', ['firebase_uid'], unique=True)
    op.create_index('ix_contact_social_profiles_lead_id', 'contact_social_profiles', ['lead_id'], unique=False)
    op.create_index('ix_contact_social_profiles_decision_maker_score', 'contact_social_profiles', [sa.text('decision_maker_score DESC')], unique=False)
    op.create_index('ix_contact_social_profiles_contact_priority', 'contact_social_profiles', ['contact_priority'], unique=False)
    op.create_index('ix_contact_profiles_company_score', 'contact_social_profiles', ['company_name', sa.text('decision_maker_score DESC')], unique=False)
    op.add_column('campaigns', sa.Column('messages_sent', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('messages_clicked', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('messages_opened', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('messages_replied', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_campaigns_status'), table_name='campaigns')
    op.drop_index(op.f('ix_campaigns_id'), table_name='campaigns')
    op.drop_index('idx_campaign_status_channel', table_name='campaigns')
    op.create_index('idx_campaigns_status', 'campaigns', ['status'], unique=False)
    op.create_index('idx_campaigns_created_at', 'campaigns', ['created_at'], unique=False)
    op.create_index('idx_campaigns_channel', 'campaigns', ['channel'], unique=False)
    op.alter_column('campaigns', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('campaigns', 'activated_at')
    op.drop_column('campaigns', 'total_replied')
    op.drop_column('campaigns', 'total_clicked')
    op.drop_column('campaigns', 'total_opened')
    op.drop_column('campaigns', 'total_delivered')
    op.drop_column('campaigns', 'total_sent')
    op.drop_constraint(None, 'campaign_messages', type_='foreignkey')
    op.drop_index(op.f('ix_campaign_messages_status'), table_name='campaign_messages')
    op.drop_index(op.f('ix_campaign_messages_lead_id'), table_name='campaign_messages')
    op.drop_index(op.f('ix_campaign_messages_id'), table_name='campaign_messages')
    op.drop_index(op.f('ix_campaign_messages_campaign_id'), table_name='campaign_messages')
    op.drop_index('idx_message_lead', table_name='campaign_messages')
    op.drop_index('idx_campaign_message_status', table_name='campaign_messages')
    op.create_index('idx_campaign_messages_status', 'campaign_messages', ['status'], unique=False)
    op.create_index('idx_campaign_messages_lead_id', 'campaign_messages', ['lead_id'], unique=False)
    op.create_index('idx_campaign_messages_campaign_id', 'campaign_messages', ['campaign_id'], unique=False)
    op.alter_column('campaign_messages', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('campaign_messages', 'selected_variant',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('campaign_messages', 'lead_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('campaign_messages', 'delivered_at')
    op.drop_column('campaign_messages', 'personalization_data')
    op.create_index('ix_agent_executions_status_created', 'agent_executions', ['status', sa.text('created_at DESC')], unique=False)
    op.create_index('ix_agent_executions_started_at', 'agent_executions', [sa.text('started_at DESC')], unique=False)
    op.create_index('ix_agent_executions_lead_status', 'agent_executions', ['lead_id', 'status'], unique=False)
    op.create_index('ix_agent_executions_completed_at', 'agent_executions', [sa.text('completed_at DESC')], unique=False)
    op.drop_index('ix_conversation_turns_started_at', table_name='conversation_turns')
    op.drop_index('ix_conversation_turns_speaker', table_name='conversation_turns')
    op.drop_index('ix_conversation_turns_sentiment', table_name='conversation_turns')
    op.drop_index('ix_conversation_turns_conversation_id', table_name='conversation_turns')
    op.drop_table('conversation_turns')
    op.drop_index('ix_conversation_battle_cards_suggested_at', table_name='conversation_battle_cards')
    op.drop_index('ix_conversation_battle_cards_conversation_id', table_name='conversation_battle_cards')
    op.drop_index('ix_conversation_battle_cards_card_type', table_name='conversation_battle_cards')
    op.drop_table('conversation_battle_cards')
    op.drop_index(op.f('ix_langgraph_tool_calls_tool_name'), table_name='langgraph_tool_calls')
    op.drop_index(op.f('ix_langgraph_tool_calls_tool_call_id'), table_name='langgraph_tool_calls')
    op.drop_index(op.f('ix_langgraph_tool_calls_id'), table_name='langgraph_tool_calls')
    op.drop_index('idx_langgraph_tool_name_type', table_name='langgraph_tool_calls')
    op.drop_index('idx_langgraph_tool_execution', table_name='langgraph_tool_calls')
    op.drop_table('langgraph_tool_calls')
    op.drop_index(op.f('ix_langgraph_checkpoints_thread_id'), table_name='langgraph_checkpoints')
    op.drop_index(op.f('ix_langgraph_checkpoints_id'), table_name='langgraph_checkpoints')
    op.drop_index(op.f('ix_langgraph_checkpoints_checkpoint_id'), table_name='langgraph_checkpoints')
    op.drop_index('idx_langgraph_checkpoint_thread', table_name='langgraph_checkpoints')
    op.drop_table('langgraph_checkpoints')
    op.drop_index('ix_conversations_status', table_name='conversations')
    op.drop_index('ix_conversations_started_at', table_name='conversations')
    op.drop_index('ix_conversations_overall_sentiment', table_name='conversations')
    op.drop_index('ix_conversations_lead_id', table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_langgraph_executions_thread_id'), table_name='langgraph_executions')
    op.drop_index(op.f('ix_langgraph_executions_status'), table_name='langgraph_executions')
    op.drop_index(op.f('ix_langgraph_executions_id'), table_name='langgraph_executions')
    op.drop_index(op.f('ix_langgraph_executions_execution_id'), table_name='langgraph_executions')
    op.drop_index(op.f('ix_langgraph_executions_agent_type'), table_name='langgraph_executions')
    op.drop_index('idx_langgraph_execution_thread', table_name='langgraph_executions')
    op.drop_index('idx_langgraph_execution_agent_status', table_name='langgraph_executions')
    op.drop_table('langgraph_executions')
    op.drop_index('ix_battle_card_templates_priority', table_name='battle_card_templates')
    op.drop_index('ix_battle_card_templates_is_active', table_name='battle_card_templates')
    op.drop_index('ix_battle_card_templates_card_type', table_name='battle_card_templates')
    op.drop_table('battle_card_templates')
    # ### end Alembic commands ###
