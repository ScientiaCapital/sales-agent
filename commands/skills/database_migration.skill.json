{
  "skill_id": "database_migration",
  "version": "1.0.0",
  "description": "Create Alembic database migration with 90% token reduction",
  "token_cost": 800,
  "decision_tree": {
    "question": "What type of database change do you need?",
    "options": {
      "add_table": {
        "description": "Add new table",
        "template": "alembic_migration.py.jinja2",
        "file_path": "backend/alembic/versions/{{ migration_id }}_add_{{ table_name }}.py",
        "extension": ".py"
      },
      "add_column": {
        "description": "Add column to existing table",
        "template": "alembic_add_column.py.jinja2",
        "file_path": "backend/alembic/versions/{{ migration_id }}_add_{{ column_name }}_to_{{ table_name }}.py",
        "extension": ".py"
      },
      "add_index": {
        "description": "Add database index",
        "template": "alembic_add_index.py.jinja2",
        "file_path": "backend/alembic/versions/{{ migration_id }}_add_index_to_{{ table_name }}.py",
        "extension": ".py"
      },
      "modify_column": {
        "description": "Modify existing column",
        "template": "alembic_modify_column.py.jinja2",
        "file_path": "backend/alembic/versions/{{ migration_id }}_modify_{{ column_name }}_in_{{ table_name }}.py",
        "extension": ".py"
      }
    }
  },
  "prerequisites": {
    "files_exist": [
      "backend/alembic/",
      "backend/alembic/versions/",
      "backend/app/models/"
    ],
    "env_vars": [
      "DATABASE_URL"
    ]
  },
  "code_templates": {
    "add_table": "\"\"\"Add {{ table_name }} table\n\nRevision ID: {{ migration_id }}\nRevises: {{ parent_revision }}\nCreate Date: {{ create_date }}\n\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\nfrom sqlalchemy.dialects import postgresql\n\n# revision identifiers, used by Alembic.\nrevision = '{{ migration_id }}'\ndown_revision = '{{ parent_revision }}'\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade() -> None:\n    \"\"\"Add {{ table_name }} table.\"\"\"\n    op.create_table(\n        '{{ table_name }}',\n        sa.Column('id', sa.Integer(), nullable=False),\n        sa.Column('created_at', sa.DateTime(), nullable=False),\n        sa.Column('updated_at', sa.DateTime(), nullable=False),\n        {{ columns }}\n        sa.PrimaryKeyConstraint('id')\n    )\n    {{ indexes }}\n\n\ndef downgrade() -> None:\n    \"\"\"Remove {{ table_name }} table.\"\"\"\n    op.drop_table('{{ table_name }}')",
    "add_column": "\"\"\"Add {{ column_name }} column to {{ table_name }}\n\nRevision ID: {{ migration_id }}\nRevises: {{ parent_revision }}\nCreate Date: {{ create_date }}\n\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\nfrom sqlalchemy.dialects import postgresql\n\n# revision identifiers, used by Alembic.\nrevision = '{{ migration_id }}'\ndown_revision = '{{ parent_revision }}'\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade() -> None:\n    \"\"\"Add {{ column_name }} column to {{ table_name }}.\"\"\"\n    op.add_column('{{ table_name }}', sa.Column('{{ column_name }}', {{ column_type }}, nullable={{ nullable }}))\n    {{ index_creation }}\n\n\ndef downgrade() -> None:\n    \"\"\"Remove {{ column_name }} column from {{ table_name }}.\"\"\"\n    {{ index_drop }}\n    op.drop_column('{{ table_name }}', '{{ column_name }}')",
    "add_index": "\"\"\"Add index to {{ table_name }}\n\nRevision ID: {{ migration_id }}\nRevises: {{ parent_revision }}\nCreate Date: {{ create_date }}\n\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\n\n# revision identifiers, used by Alembic.\nrevision = '{{ migration_id }}'\ndown_revision = '{{ parent_revision }}'\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade() -> None:\n    \"\"\"Add index to {{ table_name }}.\"\"\"\n    op.create_index(\n        '{{ index_name }}',\n        '{{ table_name }}',\n        {{ index_columns }},\n        unique={{ unique }}\n    )\n\n\ndef downgrade() -> None:\n    \"\"\"Remove index from {{ table_name }}.\"\"\"\n    op.drop_index('{{ index_name }}', table_name='{{ table_name }}')",
    "modify_column": "\"\"\"Modify {{ column_name }} column in {{ table_name }}\n\nRevision ID: {{ migration_id }}\nRevises: {{ parent_revision }}\nCreate Date: {{ create_date }}\n\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\nfrom sqlalchemy.dialects import postgresql\n\n# revision identifiers, used by Alembic.\nrevision = '{{ migration_id }}'\ndown_revision = '{{ parent_revision }}'\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade() -> None:\n    \"\"\"Modify {{ column_name }} column in {{ table_name }}.\"\"\"\n    op.alter_column(\n        '{{ table_name }}',\n        '{{ column_name }}',\n        existing_type={{ old_type }},\n        type_={{ new_type }},\n        existing_nullable={{ old_nullable }},\n        nullable={{ new_nullable }}\n    )\n\n\ndef downgrade() -> None:\n    \"\"\"Revert {{ column_name }} column in {{ table_name }}.\"\"\"\n    op.alter_column(\n        '{{ table_name }}',\n        '{{ column_name }}',\n        existing_type={{ new_type }},\n        type_={{ old_type }},\n        existing_nullable={{ new_nullable }},\n        nullable={{ old_nullable }}\n    )"
  },
  "related_skills": [
    "fastapi_endpoint",
    "write_tests"
  ],
  "examples": [
    {
      "scenario": "Add leads table",
      "pattern": "add_table",
      "parameters": {
        "table_name": "leads",
        "columns": "sa.Column('company_name', sa.String(255), nullable=False),\\n        sa.Column('industry', sa.String(100), nullable=True),\\n        sa.Column('qualification_score', sa.Float(), nullable=True)",
        "indexes": "op.create_index('ix_leads_company_name', 'leads', ['company_name'])",
        "migration_id": "abc123def456",
        "parent_revision": "previous_revision_id"
      },
      "files_created": ["backend/alembic/versions/abc123def456_add_leads.py"],
      "test_command": "alembic upgrade head && alembic downgrade -1"
    },
    {
      "scenario": "Add index to existing table",
      "pattern": "add_index",
      "parameters": {
        "table_name": "leads",
        "index_name": "ix_leads_qualification_score",
        "index_columns": "['qualification_score']",
        "unique": "False",
        "migration_id": "def456ghi789",
        "parent_revision": "abc123def456"
      },
      "files_created": ["backend/alembic/versions/def456ghi789_add_index_to_leads.py"],
      "test_command": "alembic upgrade head"
    }
  ]
}